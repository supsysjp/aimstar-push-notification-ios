// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AimstarMessagingSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AimstarMessagingSDK
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class AimstarMessaging {
  @frozen public enum Error : Swift.Error {
    case precondition(Swift.String)
    case clientError(Swift.Int?)
    case serverError(Swift.Int?)
    case networkError(any Swift.Error)
  }
  public static let shared: AimstarMessagingSDK.AimstarMessaging
  public func setup(apiKey: Swift.String, tenantId: Swift.String)
  public func setup(apiKey: Swift.String, tenantId: Swift.String, apiHost: Swift.String)
  public func registerToken(customerId: Swift.String, fcmToken: Swift.String)
  #if compiler(>=5.3) && $AsyncAwait
  public func logout() async throws
  #endif
  public func sendLog(notificationId: Swift.String, targetGroupId: Swift.String)
  public func sendLog(notification: UserNotifications.UNNotification)
  public func postToken()
  @objc deinit
}
extension AimstarMessagingSDK.AimstarMessaging {
  @available(*, unavailable, renamed: "registerCustomerId(customerId:)")
  public func registerAimstarId(aimstarId: Swift.String)
  @available(*, unavailable, message: "setDeviceId is no longer needed. App can remove the func call.")
  public func setDeviceId(deviceId: Swift.String)
  @available(*, unavailable, renamed: "registerToken(customerId:fcmToken:)")
  public func registerCustomerId(customerId: Swift.String)
  @available(*, unavailable, renamed: "registerToken(customerId:fcmToken:)")
  public func setFcmId(fcmId: Swift.String)
}
